---
layout: post
title:  "Web 사이트 성능 관리의 기본"
date:   2015-05-06 00:00:00
categories: Qiita
---

# Web 사이트 성능 관리의 기본 1

소개

## Web 사이트 성능은

Web 사이트 성능은 구체적으로 다음의 2 개에서 이루어집니다.
가용성 - 시스템에 연결할 수
응답 속도 - 사용자의 요청에 대한 응답을 반환 시간
가용성에 대해서는 24 시간 365 일 "연결되는"것이 이상적입니다. 
응답 속도에 관해서는 현재 미국에서의 지표 값 표시 시작 시간이 0.5 초 작업 가능 시간이 1 초입니다.
내가, Akamai에 근무하던 2006 년 ~ 2009 년경에는 다운로드 시간이 지표 값이었습니다. 2006 년 당시 3 초 룰 것으로 알려져 있었지만, 2009 년에는 2 초 규칙과 더 속도를 요구되게되었습니다. 
현재 미국에서는 시간이 1 초를 끄 사이트가 보통입니다.
만약 관심이 있다면, Keynote Systems에서 매주 Performance Indexes 를 발표하고 있으므로, 그 쪽을 참조하십시오.

## Web 사이트 성능 관리는

"개선"과 "관리"

Web 사이트 성능은 개선을 한 번 주면 그것으로 끝난다라는 이야기는 아닙니다. 왜냐하면 Web 사이트를 둘러싼 상황은 끊임없이 변화하는 때문입니다.
무엇 주요 변화인가하면,
콘텐츠의 구성 요소
네트워크 상황
부하 상황
3rd Party 콘텐츠 (SNS 버튼이나 광고 같은 타사의 리소스를로드하는 것)의 응답
등이 변해갑니다.
변화하고가는 것이기 때문에, 한번의 '개선'으로 끝나는 것이 아니라 '관리'가 필요합니다.
P · F 드러커는 이렇게 말하고 있습니다.
측정 할 수없는 것은 관리 할 수 없다. 
(You can not manage what you can not measure)
그래서 24 시간 365 일, Web 사이트의 성능을 측정하고 있지 않으면, "관리"수 없습니다.

## Web 사이트 성능 관리는 Web 사이트의 "배달 품질 관리"

세상의 대부분의 물건은 이처럼 불확실성을 다분히 포함하고 안정되지 않는 것뿐입니다. 소프트웨어처럼 일단 디자인하고 코딩하고 버그를 수정 해 버리면 같은 것이 얼마든지 복사하는 물건이 더 드문 것입니다.
그런데 그 '같은 것이 얼마든지 복사 할 수있다 "는 것이 Web 의해 무너져 버렸습니다. 왜냐하면 Web 콘텐츠 및 Web 어플리케이션은 HTML과 CSS, JavaScript, 이미지 등의 「부품」으로 나누어 져 인터넷이라는 '컨베이어 벨트'를 거쳐 사용자의 브라우저에서 "건설한다"때문입니다.
문제는 그 인터넷이라는 '컨베이어 벨트'로 체류가 생기거나 패킷 손실이 발생하여 부품이 끊어 질 것입니다.
따라서, 제대로 건설 여부를 확인하는 '확인 작업', 즉 품질 관리가 필요 해지고 있습니다.
이렇게, Web 사이트 성능 관리 배달 품질 관리입니다.

## 품질 관리는 시장 경쟁력과 혜택을

다행히도, 우리는 표본이되는 업종이 있습니다. 제조업입니다. 
제조업은 품질 관리를 통해 세계에 자랑하는 고품질의 제품을 세계에 수출하고 성장을 이루었습니다.
"품질 관리"라는 말을 눈에하면 "귀찮구나 ..."라고 생각하십니까? 
어떤 기술적 인 발행인으로 들었 습니다만, '품질 관리'라는 말이 제목에 들어가면 책이 팔리지 않게되어 버린다고합니다.
일본의 제조업은 뼛속까지 스며 든 「품질 관리」입니다 만, 어떻게 든 IT 업계에서 기피하고있는 것일까 요?
그리고 일본은 품질 관리 관련 소프트웨어 및 서비스는 팔리지 않는 것이라도 세계적으로 유명합니다. 사실 현재 세계적으로는 IT 예산의 1 / 4 ~ 1 / 3이 품질 관리 관계에 사용됩니다. 그러나 일본은 어떨까요? 여러분의 프로젝트에 얼마의 비율의 비용, 품질 관리 및 품질 보증에 사용되고있는 것일까 요?

## 품질 관리와 기술력

이 기사를 읽고 계신 분은 아마 기술자 분들이 대부분 이지요. 혹시, 매니저 클래스와 CTO 등의 기술자 계실지도 모릅니다.
잘, 기술자의 역량과 IT 회사의 기술력에 대해 "xxx 있기 때문 기술력이 높다」라고 이야기합니다.
나는 통계학에서 어떤 교수님에게 사사하고 있는데 얼마전 선생님으로부터 이런 일을 말씀하셨습니다.
일본 제조업의 기술력이 높다고 말할 수는 표준 편차를 작게하여 차이를 줄일 수 있기 때문이다. 속도가 관련된 것이면 그 평균과 표준 편차를 작게 할 수있는 것이 기술력이다.
'표준 편차'을 잘 모르는 분은 그곳을 "차이"으로 대체하십시오.
요리에 비유 해 봅시다. 가정 요리이지만 만드는 것이 어려운 요리 랭킹 라는 기사가 있었으므로이를 사용하겠습니다.
1 위는 국물 감기 계란이라고합니다.
그러나 감기 계란을 만들 수 있다고해서 "요리사"라고 좋은지는 얘기입니다. 
이 기사의 여성 여러분의 의견을 읽고, 아무래도 요리 잘하는 사람은 국물 감기 계란을 여러 번 깨끗이 감고, 달콤함과 부드러움도 매번 같이하고 맛있게 만들 수있는 것입니다.
즉, 편차가 작은 것입니다.
기술도 마찬가지 "만든 적이있다 '는 실적을 Web 사이트에 게재하고있는 IT 기업이나 Web 제작 회사는 많지만 성능에 대해서는 전혀 언급이 없습니다.
Web 사이트 나 Web 어플리케이션을 만들었다해도 그 성능이 항상 안정적으로 고객의 기대에 부응 수치를 내쫓 않은한다면, 그것은 기술력이 있다고 말할 수 있을까요?

## 경력 위에서도 회사의 차별화 위에서도 기회가된다 "품질 관리"

만약 당신이 엔지니어로 앞서 무리 커리어를 쌓아 싶은 경우, "품질 관리"는 확실히 큰 장점입니다. 대부분의 엔지니어들은 품질 관리와 무관하기 때문입니다.
그렇지만, 이상한 이야기​​라고 생각하지 않습니까? 제조업에서 엔지니어 품질 관리는 모르겠다 뭐라고하면 회사에있을 수는 없다고 생각합니다. 제조 엔지니어는 품질 관리를 당연하게 알고 있는데, IT 엔지니어는 모른다는 것이 문제 죠.
만약 자신의 직무 경력서에 이런 문장을 설명 할 수 있다면 어떨까요?
PHP를 이용한 Web 어플리케이션 구축 프로젝트에 프런트 엔드 엔지니어로 참가. 구현 한 시스템은 성능을 평균 2 초, 표준 편차 0.5 (96 %의 확률로 2 초 ± 1의 성능)에서 안정적인 고속 가동시켰다.
매니저 클래스, CxO 수준의 분들이라면 다음과 같은 SLA를 보장 할 수 있다고하면 어떨까요?
당사에 납품하는 EC 사이트 시스템은 96 %의 확률로 표시 시작 시간이 0.5 초 이내에 작업 가능 시간이 1 초 이내가되도록 품질을 보증하고 SEO 대책이 최대한 효과를 발휘하도록 바랍니다. 또한 지연에 따른 이탈이 최소화되도록하겠습니다.

## PageSpeed​​는 품질 관리는 없다

지금 일본에서 Web 사이트 성능 개선에 사용되는 도구로하면, Google의 PageSpeed​​ 것입니다. 그러나 불행히도, PageSpeed​​는 품질 관리는 불가능합니다.
그리고, RUM (Real User Monitoring) 서비스를 사용합시다 분들도 계시지 만, 이것도 품질 관리에서는 사용할 수 없습니다. 왜냐하면 성능 수치에 관련된 각종 변수가 잡히지 않기 때문입니다.
RUM은 마케팅 자료로 사용될 수 있지만 성능 관리에 사용할 수없는 것입니다.
통계적 품질 관리 (Statistical Quality Control)는 "통계적 품질 관리의 아버지" 월터 A 슈 하트 박사 가 1930 년대에 설립, 80 년 이상의 역사를 가지고 있습니다. 
따라서 통계학을 배우고 SQC를 배우는 것이 가장 지름길입니다.
"그것은 제조업에 대한 방법일까요?"라고 말씀하시는 분이 있을지도 모릅니다.
슈 하트 박사는 AT & T의 전신 인 Bell Telephone 통신 시스템의 신뢰성 향상을 담당하고 그 일에서 통계적 품질 관리 기법을 낳았습니다. 
전화망과 인터넷 망이라는 차이는 있어도 '통신'이라는 본질은 동일합니다.

## Web 사이트는 하나 하나 다른, 그래서 하나 하나 측정하고 조사하는 것이 중요

인간이 각자 다르듯이 회사도 한 개 한 개가 달리 Web 사이트도 하나 하나 다릅니다. 만약 모든 Web 사이트가 동일한 구조로 동일한 환경하에있는 것이라면 일단 Best Practice가 확립하면, 그것을 적용하면 수가 부족합니다.
그러나 실제로는 그렇지 않습니다.
지금까지 PageSpeed​​에서 분석하고 고속화했습니다 든가, Firebug에서 분석하고 고속화했습니다 든가, DeveloperTool에서 분석하고 고속화했습니다 라든지 말해, 측정 해 보니 늦었다는 것을 다수 경험하고 있습니다.
그 도구로 측정 한 수치는 그 순간 그랬던 이유만으로 항상 그 숫자가 아닌 것입니다. 
"샘플 1"에 지나지 않는 것입니다.
측정 수치를 보이면 "그럴 리가 없다"고 분노 된 것도 있습니다.
또한 일부 SIer과 Web 제작사는 '느린 것 배럴에서 측정 싶지 않다 "고 말한 것도 있습니다.
여러분, 우리 엔지니어들은 지식 노동자입니다. 
이성과 논리에 중점을두고 일하는 엔지니어입니다.
통계학을 배우는 것은 귀찮을지도 모릅니다. 
측정하고 데이터를 분석하는 것은 비용이 소요됩니다. 
그래도 품질 관리 엔지니어 경력으로도 사업의 장점으로도 상당한 이점을 제공합니다.

## 소프트웨어의 '힘'이 중요한 시대로

얼마 전 Microsoft 본사의 분으로, 클라우드 컴퓨팅을 담당하는 에바 목록으로 유일한 일본인 인 하기와라 정의 씨와 오랜만에 만나 이야기 할 기회가있었습니다.
하기와라 씨가 인텔의 알테라 인수 실패 건을 말한 이제 무어의 법칙의 한계에 도달 해 버리는 것을 말씀 하시고있었습니다. 기술력으로 한계에 도달 것이 아니라 자금면에서 한계에왔다입니다.
무슨 말인가하면, 14nm 칩을 만들기위한 공장을 건설하기 위해 1 조엔의 투자가 필요한 것이라고합니다. 그러나 1 조원의 투자를 회수하는 것은 현재 CPU 시장은 이제 한계에 도달하는 것이라고합니다. 그래서 부족한 부분을 FPGA의 생산을하고있는 알테라을 인수함으로써 채우려 고 한 것입니다 만, 이것이 실패함으로써 투자 회수를 기대할 수 없기 때문에 10nm 공장 건설은 위험한 것이라는 사건이었습니다.
즉, 이것이 우리에게 어떤 의미를 가지고 있는가하면, 다른 하드웨어의 발전 가속화는 기대할 수 없다는 것입니다. 따라서 앞으로 점점 더 소프트웨어 기술력이 중요 해지고 있습니다.
성능은 IT 시스템에 항상 따라 다니는 지표입니다. 앞으로의 실적 개선이 소프트웨어의 힘으로 해결하는 수밖에없는 경우 지금부터 통계학을 배우고, 품질 관리 기법을 배우는 것은 반드시 도움이된다고 생각합니다.
